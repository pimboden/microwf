// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StepperApi.Domain;

namespace StepperApi.Migrations
{
    [DbContext(typeof(DomainContext))]
    partial class DomainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("StepperApi.Workflows.Stepper.Stepper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Assignee")
                        .IsRequired();

                    b.Property<string>("Creator")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("State")
                        .IsRequired();

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Stepper");
                });

            modelBuilder.Entity("tomware.Microwf.Engine.WorkItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DueDate");

                    b.Property<int>("EntityId");

                    b.Property<string>("Error");

                    b.Property<int>("Retries");

                    b.Property<string>("TriggerName")
                        .IsRequired();

                    b.Property<string>("WorkflowType")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("WorkItem");
                });

            modelBuilder.Entity("tomware.Microwf.Engine.Workflow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Assignee");

                    b.Property<DateTime?>("Completed");

                    b.Property<int>("CorrelationId");

                    b.Property<DateTime>("Started");

                    b.Property<string>("State")
                        .IsRequired();

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Workflow");
                });

            modelBuilder.Entity("tomware.Microwf.Engine.WorkflowHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("FromState")
                        .IsRequired();

                    b.Property<string>("ToState")
                        .IsRequired();

                    b.Property<string>("UserName");

                    b.Property<int>("WorkflowId");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowId");

                    b.ToTable("WorkflowHistory");
                });

            modelBuilder.Entity("tomware.Microwf.Engine.WorkflowVariable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<string>("Type")
                        .IsRequired();

                    b.Property<int>("WorkflowId");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowId");

                    b.ToTable("WorkflowVariable");
                });

            modelBuilder.Entity("tomware.Microwf.Engine.WorkflowHistory", b =>
                {
                    b.HasOne("tomware.Microwf.Engine.Workflow", "Workflow")
                        .WithMany("WorkflowHistories")
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tomware.Microwf.Engine.WorkflowVariable", b =>
                {
                    b.HasOne("tomware.Microwf.Engine.Workflow", "Workflow")
                        .WithMany("WorkflowVariables")
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
